// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should NOT update amount state when the amount input has invalid value 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <div
    className="form-group"
  >
    <label
      for="description"
    >
      Description
    </label>
    <input
      autoFocus={true}
      className="form-control"
      id="description"
      onChange={[Function]}
      placeholder="Enter Description"
      type="text"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="amount"
    >
      Amount
    </label>
    <input
      className="form-control"
      id="amount"
      onChange={[Function]}
      placeholder="Amount"
      type="number"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="note"
    >
      Note
    </label>
    <textarea
      className="form-control"
      id="note"
      name="note"
      onChange={[Function]}
      placeholder="Add a Note for this Expense"
      rows="7"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="createdAt"
    >
      Created At
    </label>
    <DatePicker
      allowSameDay={false}
      className="form-control"
      dateFormat="dd-MMM-yyyy"
      dateFormatCalendar="LLLL yyyy"
      disabled={false}
      disabledKeyboardNavigation={false}
      dropdownMode="scroll"
      id="createdAt"
      inlineFocusSelectedMonth={false}
      monthsShown={1}
      name="createdAt"
      nextMonthButtonLabel="Next month"
      onBlur={[Function]}
      onChange={[Function]}
      onClickOutside={[Function]}
      onFocus={[Function]}
      onInputClick={[Function]}
      onInputError={[Function]}
      onKeyDown={[Function]}
      onMonthChange={[Function]}
      onSelect={[Function]}
      onYearChange={[Function]}
      preventOpenOnFocus={false}
      previousMonthButtonLabel="Previous Month"
      readOnly={false}
      renderDayContents={[Function]}
      selected={1970-01-01T00:00:00.000Z}
      shouldCloseOnSelect={true}
      showMonthYearPicker={false}
      showTimeInput={false}
      showTimeSelect={false}
      strictParsing={false}
      timeCaption="Time"
      timeInputLabel="Time"
      timeIntervals={30}
      title="Created At"
      todayButton="Today"
      withPortal={false}
    />
  </div>
  <div>
    <button
      className="btn btn-primary"
      onClick={[Function]}
    >
      Save Expense
    </button>
  </div>
</form>
`;

exports[`Should render error message when the form is invalid 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <div
    className="form-group"
  >
    <label
      for="description"
    >
      Description
    </label>
    <input
      autoFocus={true}
      className="form-control"
      id="description"
      onChange={[Function]}
      placeholder="Enter Description"
      type="text"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="amount"
    >
      Amount
    </label>
    <input
      className="form-control"
      id="amount"
      onChange={[Function]}
      placeholder="Amount"
      type="number"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="note"
    >
      Note
    </label>
    <textarea
      className="form-control"
      id="note"
      name="note"
      onChange={[Function]}
      placeholder="Add a Note for this Expense"
      rows="7"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="createdAt"
    >
      Created At
    </label>
    <DatePicker
      allowSameDay={false}
      className="form-control"
      dateFormat="dd-MMM-yyyy"
      dateFormatCalendar="LLLL yyyy"
      disabled={false}
      disabledKeyboardNavigation={false}
      dropdownMode="scroll"
      id="createdAt"
      inlineFocusSelectedMonth={false}
      monthsShown={1}
      name="createdAt"
      nextMonthButtonLabel="Next month"
      onBlur={[Function]}
      onChange={[Function]}
      onClickOutside={[Function]}
      onFocus={[Function]}
      onInputClick={[Function]}
      onInputError={[Function]}
      onKeyDown={[Function]}
      onMonthChange={[Function]}
      onSelect={[Function]}
      onYearChange={[Function]}
      preventOpenOnFocus={false}
      previousMonthButtonLabel="Previous Month"
      readOnly={false}
      renderDayContents={[Function]}
      selected={1970-01-01T00:00:00.000Z}
      shouldCloseOnSelect={true}
      showMonthYearPicker={false}
      showTimeInput={false}
      showTimeSelect={false}
      strictParsing={false}
      timeCaption="Time"
      timeInputLabel="Time"
      timeIntervals={30}
      title="Created At"
      todayButton="Today"
      withPortal={false}
    />
  </div>
  <div>
    <button
      className="btn btn-primary"
      onClick={[Function]}
    >
      Save Expense
    </button>
  </div>
</form>
`;

exports[`Should render error message when the form is invalid 2`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <p
    className="bg-danger text-white"
  >
    Please enter description and amount
  </p>
  <div
    className="form-group"
  >
    <label
      for="description"
    >
      Description
    </label>
    <input
      autoFocus={true}
      className="form-control"
      id="description"
      onChange={[Function]}
      placeholder="Enter Description"
      type="text"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="amount"
    >
      Amount
    </label>
    <input
      className="form-control"
      id="amount"
      onChange={[Function]}
      placeholder="Amount"
      type="number"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="note"
    >
      Note
    </label>
    <textarea
      className="form-control"
      id="note"
      name="note"
      onChange={[Function]}
      placeholder="Add a Note for this Expense"
      rows="7"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="createdAt"
    >
      Created At
    </label>
    <DatePicker
      allowSameDay={false}
      className="form-control"
      dateFormat="dd-MMM-yyyy"
      dateFormatCalendar="LLLL yyyy"
      disabled={false}
      disabledKeyboardNavigation={false}
      dropdownMode="scroll"
      id="createdAt"
      inlineFocusSelectedMonth={false}
      monthsShown={1}
      name="createdAt"
      nextMonthButtonLabel="Next month"
      onBlur={[Function]}
      onChange={[Function]}
      onClickOutside={[Function]}
      onFocus={[Function]}
      onInputClick={[Function]}
      onInputError={[Function]}
      onKeyDown={[Function]}
      onMonthChange={[Function]}
      onSelect={[Function]}
      onYearChange={[Function]}
      preventOpenOnFocus={false}
      previousMonthButtonLabel="Previous Month"
      readOnly={false}
      renderDayContents={[Function]}
      selected={1970-01-01T00:00:00.000Z}
      shouldCloseOnSelect={true}
      showMonthYearPicker={false}
      showTimeInput={false}
      showTimeSelect={false}
      strictParsing={false}
      timeCaption="Time"
      timeInputLabel="Time"
      timeIntervals={30}
      title="Created At"
      todayButton="Today"
      withPortal={false}
    />
  </div>
  <div>
    <button
      className="btn btn-primary"
      onClick={[Function]}
    >
      Save Expense
    </button>
  </div>
</form>
`;

exports[`Should update amount state when the amount input changes 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <div
    className="form-group"
  >
    <label
      for="description"
    >
      Description
    </label>
    <input
      autoFocus={true}
      className="form-control"
      id="description"
      onChange={[Function]}
      placeholder="Enter Description"
      type="text"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="amount"
    >
      Amount
    </label>
    <input
      className="form-control"
      id="amount"
      onChange={[Function]}
      placeholder="Amount"
      type="number"
      value="30"
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="note"
    >
      Note
    </label>
    <textarea
      className="form-control"
      id="note"
      name="note"
      onChange={[Function]}
      placeholder="Add a Note for this Expense"
      rows="7"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="createdAt"
    >
      Created At
    </label>
    <DatePicker
      allowSameDay={false}
      className="form-control"
      dateFormat="dd-MMM-yyyy"
      dateFormatCalendar="LLLL yyyy"
      disabled={false}
      disabledKeyboardNavigation={false}
      dropdownMode="scroll"
      id="createdAt"
      inlineFocusSelectedMonth={false}
      monthsShown={1}
      name="createdAt"
      nextMonthButtonLabel="Next month"
      onBlur={[Function]}
      onChange={[Function]}
      onClickOutside={[Function]}
      onFocus={[Function]}
      onInputClick={[Function]}
      onInputError={[Function]}
      onKeyDown={[Function]}
      onMonthChange={[Function]}
      onSelect={[Function]}
      onYearChange={[Function]}
      preventOpenOnFocus={false}
      previousMonthButtonLabel="Previous Month"
      readOnly={false}
      renderDayContents={[Function]}
      selected={1970-01-01T00:00:00.000Z}
      shouldCloseOnSelect={true}
      showMonthYearPicker={false}
      showTimeInput={false}
      showTimeSelect={false}
      strictParsing={false}
      timeCaption="Time"
      timeInputLabel="Time"
      timeIntervals={30}
      title="Created At"
      todayButton="Today"
      withPortal={false}
    />
  </div>
  <div>
    <button
      className="btn btn-primary"
      onClick={[Function]}
    >
      Save Expense
    </button>
  </div>
</form>
`;

exports[`Should update description state when input changes 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <div
    className="form-group"
  >
    <label
      for="description"
    >
      Description
    </label>
    <input
      autoFocus={true}
      className="form-control"
      id="description"
      onChange={[Function]}
      placeholder="Enter Description"
      type="text"
      value="Test Expense Description"
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="amount"
    >
      Amount
    </label>
    <input
      className="form-control"
      id="amount"
      onChange={[Function]}
      placeholder="Amount"
      type="number"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="note"
    >
      Note
    </label>
    <textarea
      className="form-control"
      id="note"
      name="note"
      onChange={[Function]}
      placeholder="Add a Note for this Expense"
      rows="7"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="createdAt"
    >
      Created At
    </label>
    <DatePicker
      allowSameDay={false}
      className="form-control"
      dateFormat="dd-MMM-yyyy"
      dateFormatCalendar="LLLL yyyy"
      disabled={false}
      disabledKeyboardNavigation={false}
      dropdownMode="scroll"
      id="createdAt"
      inlineFocusSelectedMonth={false}
      monthsShown={1}
      name="createdAt"
      nextMonthButtonLabel="Next month"
      onBlur={[Function]}
      onChange={[Function]}
      onClickOutside={[Function]}
      onFocus={[Function]}
      onInputClick={[Function]}
      onInputError={[Function]}
      onKeyDown={[Function]}
      onMonthChange={[Function]}
      onSelect={[Function]}
      onYearChange={[Function]}
      preventOpenOnFocus={false}
      previousMonthButtonLabel="Previous Month"
      readOnly={false}
      renderDayContents={[Function]}
      selected={1970-01-01T00:00:00.000Z}
      shouldCloseOnSelect={true}
      showMonthYearPicker={false}
      showTimeInput={false}
      showTimeSelect={false}
      strictParsing={false}
      timeCaption="Time"
      timeInputLabel="Time"
      timeIntervals={30}
      title="Created At"
      todayButton="Today"
      withPortal={false}
    />
  </div>
  <div>
    <button
      className="btn btn-primary"
      onClick={[Function]}
    >
      Save Expense
    </button>
  </div>
</form>
`;

exports[`Should update note state when textarea changes 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <div
    className="form-group"
  >
    <label
      for="description"
    >
      Description
    </label>
    <input
      autoFocus={true}
      className="form-control"
      id="description"
      onChange={[Function]}
      placeholder="Enter Description"
      type="text"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="amount"
    >
      Amount
    </label>
    <input
      className="form-control"
      id="amount"
      onChange={[Function]}
      placeholder="Amount"
      type="number"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="note"
    >
      Note
    </label>
    <textarea
      className="form-control"
      id="note"
      name="note"
      onChange={[Function]}
      placeholder="Add a Note for this Expense"
      rows="7"
      value="Test Expense Note"
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="createdAt"
    >
      Created At
    </label>
    <DatePicker
      allowSameDay={false}
      className="form-control"
      dateFormat="dd-MMM-yyyy"
      dateFormatCalendar="LLLL yyyy"
      disabled={false}
      disabledKeyboardNavigation={false}
      dropdownMode="scroll"
      id="createdAt"
      inlineFocusSelectedMonth={false}
      monthsShown={1}
      name="createdAt"
      nextMonthButtonLabel="Next month"
      onBlur={[Function]}
      onChange={[Function]}
      onClickOutside={[Function]}
      onFocus={[Function]}
      onInputClick={[Function]}
      onInputError={[Function]}
      onKeyDown={[Function]}
      onMonthChange={[Function]}
      onSelect={[Function]}
      onYearChange={[Function]}
      preventOpenOnFocus={false}
      previousMonthButtonLabel="Previous Month"
      readOnly={false}
      renderDayContents={[Function]}
      selected={1970-01-01T00:00:00.000Z}
      shouldCloseOnSelect={true}
      showMonthYearPicker={false}
      showTimeInput={false}
      showTimeSelect={false}
      strictParsing={false}
      timeCaption="Time"
      timeInputLabel="Time"
      timeIntervals={30}
      title="Created At"
      todayButton="Today"
      withPortal={false}
    />
  </div>
  <div>
    <button
      className="btn btn-primary"
      onClick={[Function]}
    >
      Save Expense
    </button>
  </div>
</form>
`;

exports[`Testing ExpenseForm component snapshot 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <div
    className="form-group"
  >
    <label
      for="description"
    >
      Description
    </label>
    <input
      autoFocus={true}
      className="form-control"
      id="description"
      onChange={[Function]}
      placeholder="Enter Description"
      type="text"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="amount"
    >
      Amount
    </label>
    <input
      className="form-control"
      id="amount"
      onChange={[Function]}
      placeholder="Amount"
      type="number"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="note"
    >
      Note
    </label>
    <textarea
      className="form-control"
      id="note"
      name="note"
      onChange={[Function]}
      placeholder="Add a Note for this Expense"
      rows="7"
      value=""
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="createdAt"
    >
      Created At
    </label>
    <DatePicker
      allowSameDay={false}
      className="form-control"
      dateFormat="dd-MMM-yyyy"
      dateFormatCalendar="LLLL yyyy"
      disabled={false}
      disabledKeyboardNavigation={false}
      dropdownMode="scroll"
      id="createdAt"
      inlineFocusSelectedMonth={false}
      monthsShown={1}
      name="createdAt"
      nextMonthButtonLabel="Next month"
      onBlur={[Function]}
      onChange={[Function]}
      onClickOutside={[Function]}
      onFocus={[Function]}
      onInputClick={[Function]}
      onInputError={[Function]}
      onKeyDown={[Function]}
      onMonthChange={[Function]}
      onSelect={[Function]}
      onYearChange={[Function]}
      preventOpenOnFocus={false}
      previousMonthButtonLabel="Previous Month"
      readOnly={false}
      renderDayContents={[Function]}
      selected={1970-01-01T00:00:00.000Z}
      shouldCloseOnSelect={true}
      showMonthYearPicker={false}
      showTimeInput={false}
      showTimeSelect={false}
      strictParsing={false}
      timeCaption="Time"
      timeInputLabel="Time"
      timeIntervals={30}
      title="Created At"
      todayButton="Today"
      withPortal={false}
    />
  </div>
  <div>
    <button
      className="btn btn-primary"
      onClick={[Function]}
    >
      Save Expense
    </button>
  </div>
</form>
`;

exports[`Testing ExpenseForm component snapshot with default expense property 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <div
    className="form-group"
  >
    <label
      for="description"
    >
      Description
    </label>
    <input
      autoFocus={true}
      className="form-control"
      id="description"
      onChange={[Function]}
      placeholder="Enter Description"
      type="text"
      value="pen"
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="amount"
    >
      Amount
    </label>
    <input
      className="form-control"
      id="amount"
      onChange={[Function]}
      placeholder="Amount"
      type="number"
      value={100}
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="note"
    >
      Note
    </label>
    <textarea
      className="form-control"
      id="note"
      name="note"
      onChange={[Function]}
      placeholder="Add a Note for this Expense"
      rows="7"
      value="test note for test expense"
    />
  </div>
  <div
    className="form-group"
  >
    <label
      for="createdAt"
    >
      Created At
    </label>
    <DatePicker
      allowSameDay={false}
      className="form-control"
      dateFormat="dd-MMM-yyyy"
      dateFormatCalendar="LLLL yyyy"
      disabled={false}
      disabledKeyboardNavigation={false}
      dropdownMode="scroll"
      id="createdAt"
      inlineFocusSelectedMonth={false}
      monthsShown={1}
      name="createdAt"
      nextMonthButtonLabel="Next month"
      onBlur={[Function]}
      onChange={[Function]}
      onClickOutside={[Function]}
      onFocus={[Function]}
      onInputClick={[Function]}
      onInputError={[Function]}
      onKeyDown={[Function]}
      onMonthChange={[Function]}
      onSelect={[Function]}
      onYearChange={[Function]}
      preventOpenOnFocus={false}
      previousMonthButtonLabel="Previous Month"
      readOnly={false}
      renderDayContents={[Function]}
      selected={1970-01-01T00:00:08.000Z}
      shouldCloseOnSelect={true}
      showMonthYearPicker={false}
      showTimeInput={false}
      showTimeSelect={false}
      strictParsing={false}
      timeCaption="Time"
      timeInputLabel="Time"
      timeIntervals={30}
      title="Created At"
      todayButton="Today"
      withPortal={false}
    />
  </div>
  <div>
    <button
      className="btn btn-primary"
      onClick={[Function]}
    >
      Save Expense
    </button>
  </div>
</form>
`;
